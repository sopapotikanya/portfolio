close all
clear
path_input = '../Data/calibrate_image/';
path_output = '../Results/detectCheckerboard2/';

typeCheckerboard = 'triangle';
cornerShape = 6;

% typeCheckerboard = 'chess';
% cornerShape = 4;

th = 0.8;

boxTest = [ ...
    7,7; ...
    11,11; ...
    15,15; ...
    19,19; ...
    23,23; ...
    27,27; ...
    7,11; ...
    7,15; ...
    7,19; ...
    7,23; ...
    7,27; ...
    11,15; ...
    11,19; ...
    11,23; ...
    11,27; ...
    15,19; ...
    15,23; ...
    15,27; ...
    19,23; ...
    19,27; ...
    23,27; ...
    ];
for b=1:size(boxTest,1)
    box = boxTest(b,:);
%     mkdir([path_output 'mirror_' typeCheckerboard '_' num2str(box(1)) 'x' num2str(box(2))]);
    

    for i=0:7
        mkdir([path_output 'mirror_' typeCheckerboard '000' num2str(i)]);
        I = imread([path_input 'mirror_' typeCheckerboard '/mirror_' typeCheckerboard '000' num2str(i) '.bmp']);

        [mark, BW, edgeImg, score, scoreDilate] = detectTriangleboardPoints(I,box,cornerShape,th);

        I_mark = insertShape(I,'circle',[mark, ones(size(mark,1),1)*5],'LineWidth',3,'Color','red');
    %     allImage = cat(4,repmat(BW,[1,1,3])*255,repmat(edgeImg,[1,1,3])*255,repmat(score>0.8,[1,1,3])*255,I_mark);
    %     montage(allImage);

        output_name = [path_output 'mirror_' typeCheckerboard '000' num2str(i) '/mirror_' typeCheckerboard '000' num2str(i) '_' num2str(box(1)) 'x' num2str(box(2))];
        imwrite(BW,[path_output 'mirror_' typeCheckerboard '000' num2str(i)  '/BW.png'])
        imwrite(edgeImg,[path_output 'mirror_' typeCheckerboard '000' num2str(i)  '/edge.png'])
        imwrite(score,[output_name '_score.png'])
        imwrite(scoreDilate,[output_name '_scoredilate.png'])
        imwrite(I_mark,[output_name '_result.jpg'])
    end
end
